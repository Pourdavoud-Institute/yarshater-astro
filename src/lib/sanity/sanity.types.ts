/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
    _type: 'sanity.imagePaletteSwatch';
    background?: string;
    foreground?: string;
    population?: number;
    title?: string;
};

export type SanityImagePalette = {
    _type: 'sanity.imagePalette';
    darkMuted?: SanityImagePaletteSwatch;
    lightVibrant?: SanityImagePaletteSwatch;
    darkVibrant?: SanityImagePaletteSwatch;
    vibrant?: SanityImagePaletteSwatch;
    dominant?: SanityImagePaletteSwatch;
    lightMuted?: SanityImagePaletteSwatch;
    muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
    _type: 'sanity.imageDimensions';
    height?: number;
    width?: number;
    aspectRatio?: number;
};

export type SanityFileAsset = {
    _id: string;
    _type: 'sanity.fileAsset';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    originalFilename?: string;
    label?: string;
    title?: string;
    description?: string;
    altText?: string;
    sha1hash?: string;
    extension?: string;
    mimeType?: string;
    size?: number;
    assetId?: string;
    uploadId?: string;
    path?: string;
    url?: string;
    source?: SanityAssetSourceData;
};

export type Geopoint = {
    _type: 'geopoint';
    lat?: number;
    lng?: number;
    alt?: number;
};

export type SiteSettingsYarshater = {
    _id: string;
    _type: 'siteSettingsYarshater';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    siteName?: string;
    siteDomain?: string;
    seo?: Seo;
    openGraph?: OpenGraph;
};

export type DisclosureSet = {
    _type: 'disclosureSet';
    heading?: string;
    preview?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal';
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    items?: Array<{
        heading?: string;
        body?: Array<{
            children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: 'span';
                _key: string;
            }>;
            style?: 'normal' | 'h3';
            listItem?: 'bullet' | 'number';
            markDefs?: Array<{
                type?: 'reference' | 'internal' | 'external';
                reference?:
                    | {
                          _ref: string;
                          _type: 'reference';
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: 'page';
                      }
                    | {
                          _ref: string;
                          _type: 'reference';
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: 'person';
                      }
                    | {
                          _ref: string;
                          _type: 'reference';
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: 'event';
                      }
                    | {
                          _ref: string;
                          _type: 'reference';
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: 'post';
                      };
                internal?: string;
                external?: string;
                target?: boolean;
                _type: 'richTextLink';
                _key: string;
            }>;
            level?: number;
            _type: 'block';
            _key: string;
        }>;
        _type: 'disclosure';
        _key: string;
    }>;
};

export type LinkGroup = {
    _type: 'linkGroup';
    links?: Array<
        {
            _key: string;
        } & Link
    >;
};

export type CvSection = {
    _type: 'cvSection';
    title?: string;
    richText?: PersonRichText;
};

export type Speaker = {
    _type: 'speaker';
    name?: string;
    title?: string;
    institution?: string;
    featuredImage?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        caption?: string;
        _type: 'image';
    };
    about?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal';
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    link?: string;
};

export type Break = {
    _type: 'break';
    style?: 'hr';
};

export type CustomHTML = {
    _type: 'customHTML';
    html?: Code;
    className?: string;
};

export type Role = {
    _type: 'role';
    title?: string;
    organization?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'organization';
    };
};

export type LinkList = {
    _type: 'linkList';
    label?: string;
    links?: Array<
        {
            _key: string;
        } & Link
    >;
};

export type Link = {
    _type: 'link';
    type?: 'reference' | 'internal' | 'external';
    reference?:
        | {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'page';
          }
        | {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'person';
          }
        | {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'event';
          }
        | {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'post';
          };
    internal?: string;
    external?: string;
    target?: boolean;
    label?: string;
    is_cta?: boolean;
};

export type TwoColumnText = {
    _type: 'twoColumnText';
    heading?: string;
    richText?: RichText;
    backgroundColor?: boolean;
};

export type RelatedLinks = {
    _type: 'relatedLinks';
    heading?: string;
    links?: Array<
        {
            _key: string;
        } & Link
    >;
};

export type FeaturedElement = {
    _type: 'featuredElement';
    eyebrow?: string;
    heading?: string;
    preview?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal';
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    featuredImage?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        caption?: string;
        _type: 'image';
    };
    cta?: Array<
        {
            _key: string;
        } & Link
    >;
    backgroundColor?: boolean;
    imagePosition?: 'right' | 'left';
};

export type EventsPreviewList = {
    _type: 'eventsPreviewList';
    showUpcoming?: boolean;
    showPast?: boolean;
};

export type CollectionList = {
    _type: 'collectionList';
    heading?: string;
    collection?: 'post' | 'person' | 'event';
    collectionEntries?: Array<
        | {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'person';
          }
        | {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'post';
          }
    >;
    cta?: Array<
        {
            _key: string;
        } & Link
    >;
    customSelection?: boolean;
    displayCount?: 3 | 6;
    columns?: 3 | 4;
};

export type CardList = {
    _type: 'cardList';
    heading?: string;
    cards?: Array<
        | {
              heading?: string;
              preview?: Array<{
                  children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: 'span';
                      _key: string;
                  }>;
                  style?: 'normal';
                  listItem?: never;
                  markDefs?: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
              }>;
              featuredImage?: {
                  asset?: {
                      _ref: string;
                      _type: 'reference';
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  alt?: string;
                  caption?: string;
                  _type: 'image';
              };
              cta?: Array<
                  {
                      _key: string;
                  } & Link
              >;
              _type: 'card';
              _key: string;
          }
        | {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              _key: string;
              [internalGroqTypeReferenceTo]?: 'page';
          }
    >;
};

export type HeroBanner = {
    _type: 'heroBanner';
    heading?: string;
    subheading?: string;
    featuredImage?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        caption?: string;
        _type: 'image';
    };
    cta?: Array<
        {
            _key: string;
        } & Link
    >;
};

export type PublicationList = {
    _type: 'publicationList';
    title?: string;
    publications?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'publication';
    }>;
};

export type Publication = {
    _id: string;
    _type: 'publication';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    subtitle?: string;
    slug?: Slug;
    workspaces?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'workspaceTag';
    }>;
    type?: 'book' | 'article' | 'journal';
    authors?: Array<
        | {
              reference?: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'person';
              };
              role?: 'author' | 'editor';
              _type: 'authorReference';
              _key: string;
          }
        | {
              name?: string;
              role?: 'author' | 'editor';
              _type: 'author';
              _key: string;
          }
    >;
    journal?: {
        title?: string;
        volume?: number;
    };
    publisher?: string;
    publicationDate?: string;
    publicationLink?: string;
    citation?: string;
    featuredImage?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: 'image';
    };
};

export type PersonRichText = {
    _type: 'personRichText';
    blocks?: Array<
        | {
              children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
              }>;
              style?: 'normal' | 'h2' | 'h3' | 'blockquote';
              listItem?: 'bullet' | 'number';
              markDefs?: Array<{
                  type?: 'reference' | 'internal' | 'external';
                  reference?:
                      | {
                            _ref: string;
                            _type: 'reference';
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: 'page';
                        }
                      | {
                            _ref: string;
                            _type: 'reference';
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: 'person';
                        }
                      | {
                            _ref: string;
                            _type: 'reference';
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: 'event';
                        };
                  internal?: string;
                  external?: string;
                  target?: boolean;
                  _type: 'richTextLink';
                  _key: string;
              }>;
              level?: number;
              _type: 'block';
              _key: string;
          }
        | ({
              _key: string;
          } & PublicationList)
        | ({
              _key: string;
          } & CustomHTML)
    >;
};

export type PersonCategory = {
    _id: string;
    _type: 'personCategory';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    slug?: Slug;
};

export type WorkspaceTag = {
    _id: string;
    _type: 'workspaceTag';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    slug?: Slug;
};

export type Tag = {
    _id: string;
    _type: 'tag';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    slug?: Slug;
};

export type Video = {
    _id: string;
    _type: 'video';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    slug?: Slug;
    date?: string;
    workspaces?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'workspaceTag';
    }>;
    preview?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal';
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    url?: string;
    reference?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'event';
    }>;
    richText?: RichText;
    citation?: string;
    tags?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'tag';
    }>;
    seo?: Seo;
    openGraph?: OpenGraph;
    createdDate?: string;
    modifiedDate?: string;
};

export type PostCategory = {
    _id: string;
    _type: 'postCategory';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    slug?: Slug;
};

export type EventCategory = {
    _id: string;
    _type: 'eventCategory';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    slug?: Slug;
    workspaces?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'workspaceTag';
    }>;
};

export type Page = {
    _id: string;
    _type: 'page';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    parent?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'page';
    }>;
    slug?: Slug;
    template?:
        | 'default'
        | 'landing'
        | 'listing'
        | 'index'
        | 'eventsIndex'
        | 'info'
        | 'parent'
        | 'utility';
    workspaces?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'workspaceTag';
    }>;
    pageHeader?: PageHeader;
    modules_default?: Array<
        | ({
              _key: string;
          } & FeaturedElement)
        | ({
              _key: string;
          } & TwoColumnText)
        | ({
              _key: string;
          } & CardList)
        | ({
              _key: string;
          } & RelatedLinks)
        | ({
              _key: string;
          } & CollectionList)
        | ({
              _key: string;
          } & DisclosureSet)
        | ({
              _key: string;
          } & RichText)
    >;
    modules_landing?: Array<
        | ({
              _key: string;
          } & HeroBanner)
        | ({
              _key: string;
          } & FeaturedElement)
        | ({
              _key: string;
          } & CardList)
        | ({
              _key: string;
          } & EventsPreviewList)
        | ({
              _key: string;
          } & CollectionList)
        | ({
              _key: string;
          } & RelatedLinks)
    >;
    modules_information?: Array<
        | ({
              _key: string;
          } & RichText)
        | ({
              _key: string;
          } & RelatedLinks)
    >;
    seo?: Seo;
    openGraph?: OpenGraph;
};

export type Person = {
    _id: string;
    _type: 'person';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    name?: {
        firstName?: string;
        lastName?: string;
    };
    slug?: Slug;
    type?: 'internal' | 'ucla' | 'external';
    roles?: Array<
        {
            _key: string;
        } & Role
    >;
    workspaces?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'workspaceTag';
    }>;
    email?: string;
    facultyLink?: string;
    headshot?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: 'image';
    };
    biography?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal' | 'h3';
        listItem?: 'bullet' | 'number';
        markDefs?: Array<{
            type?: 'reference' | 'internal' | 'external';
            reference?:
                | {
                      _ref: string;
                      _type: 'reference';
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: 'page';
                  }
                | {
                      _ref: string;
                      _type: 'reference';
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: 'person';
                  }
                | {
                      _ref: string;
                      _type: 'reference';
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: 'event';
                  }
                | {
                      _ref: string;
                      _type: 'reference';
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: 'post';
                  };
            internal?: string;
            external?: string;
            target?: boolean;
            _type: 'richTextLink';
            _key: string;
        }>;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    showCV?: boolean;
    cvSections?: Array<
        | ({
              _key: string;
          } & CvSection)
        | ({
              _key: string;
          } & PublicationList)
    >;
    categories?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'personCategory';
    }>;
};

export type Event = {
    _id: string;
    _type: 'event';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    slug?: Slug;
    workspaces?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'workspaceTag';
    }>;
    eventDetails?: {
        multiDay?: boolean;
        date?: {
            startDate?: string;
            endDate?: string;
        };
        time?: {
            startTime?: string;
            endTime?: string;
        };
        location?: string;
        rsvpLink?: string;
    };
    previewTitle?: string;
    preview?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal';
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    featuredImage?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        caption?: string;
        _type: 'image';
    };
    richText?: RichText;
    categories?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'eventCategory';
    }>;
    tags?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'tag';
    }>;
    seo?: Seo;
    openGraph?: OpenGraph;
};

export type Post = {
    _id: string;
    _type: 'post';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    slug?: Slug;
    displayDate?: string;
    workspaces?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'workspaceTag';
    }>;
    preview?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal';
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    featuredImage?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        caption?: string;
        _type: 'image';
    };
    lede?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal';
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    richText?: RichText;
    categories?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'postCategory';
    }>;
    seo?: Seo;
    openGraph?: OpenGraph;
};

export type OpenGraph = {
    _type: 'openGraph';
    title?: string;
    image?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: 'image';
    };
};

export type Seo = {
    _type: 'seo';
    title?: string;
    description?: string;
};

export type RichText = {
    _type: 'richText';
    blocks?: Array<
        | {
              children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
              }>;
              style?: 'normal' | 'h2' | 'h3' | 'blockquote';
              listItem?: 'bullet' | 'number';
              markDefs?: Array<{
                  type?: 'reference' | 'internal' | 'external';
                  reference?:
                      | {
                            _ref: string;
                            _type: 'reference';
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: 'page';
                        }
                      | {
                            _ref: string;
                            _type: 'reference';
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: 'person';
                        }
                      | {
                            _ref: string;
                            _type: 'reference';
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: 'event';
                        }
                      | {
                            _ref: string;
                            _type: 'reference';
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: 'post';
                        };
                  internal?: string;
                  external?: string;
                  target?: boolean;
                  _type: 'richTextLink';
                  _key: string;
              }>;
              level?: number;
              _type: 'block';
              _key: string;
          }
        | {
              asset?: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              alt?: string;
              caption?: string;
              loading?: 'lazy' | 'eager';
              layout?: 'contained' | 'full';
              _type: 'richTextImage';
              _key: string;
          }
        | ({
              _key: string;
          } & LinkGroup)
        | ({
              _key: string;
          } & CustomHTML)
        | ({
              _key: string;
          } & Speaker)
        | ({
              _key: string;
          } & Break)
    >;
};

export type SanityImageCrop = {
    _type: 'sanity.imageCrop';
    top?: number;
    bottom?: number;
    left?: number;
    right?: number;
};

export type SanityImageHotspot = {
    _type: 'sanity.imageHotspot';
    x?: number;
    y?: number;
    height?: number;
    width?: number;
};

export type SanityImageAsset = {
    _id: string;
    _type: 'sanity.imageAsset';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    originalFilename?: string;
    label?: string;
    title?: string;
    description?: string;
    altText?: string;
    sha1hash?: string;
    extension?: string;
    mimeType?: string;
    size?: number;
    assetId?: string;
    uploadId?: string;
    path?: string;
    url?: string;
    metadata?: SanityImageMetadata;
    source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
    _type: 'sanity.assetSourceData';
    name?: string;
    id?: string;
    url?: string;
};

export type SanityImageMetadata = {
    _type: 'sanity.imageMetadata';
    location?: Geopoint;
    dimensions?: SanityImageDimensions;
    palette?: SanityImagePalette;
    lqip?: string;
    blurHash?: string;
    hasAlpha?: boolean;
    isOpaque?: boolean;
};

export type PageHeader = {
    _type: 'pageHeader';
    layout?: 'simple' | 'singleImage' | 'splitPane';
    preview?: Array<{
        children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: 'span';
            _key: string;
        }>;
        style?: 'normal';
        listItem?: never;
        markDefs?: null;
        level?: number;
        _type: 'block';
        _key: string;
    }>;
    featuredImage?: {
        asset?: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        caption?: string;
        _type: 'image';
    };
};

export type Navigation = {
    _id: string;
    _type: 'navigation';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    items?: Array<
        | ({
              _key: string;
          } & Link)
        | ({
              _key: string;
          } & LinkList)
    >;
    workspaces?: Array<{
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: 'workspaceTag';
    }>;
};

export type Organization = {
    _id: string;
    _type: 'organization';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title?: string;
    fullTitle?: string;
    description?: string;
    url?: string;
};

export type Code = {
    _type: 'code';
    language?: string;
    filename?: string;
    code?: string;
    highlightedLines?: Array<number>;
};

export type MediaTag = {
    _id: string;
    _type: 'media.tag';
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    name?: Slug;
};

export type Slug = {
    _type: 'slug';
    current?: string;
    source?: string;
};

export type AllSanitySchemaTypes =
    | SanityImagePaletteSwatch
    | SanityImagePalette
    | SanityImageDimensions
    | SanityFileAsset
    | Geopoint
    | SiteSettingsYarshater
    | DisclosureSet
    | LinkGroup
    | CvSection
    | Speaker
    | Break
    | CustomHTML
    | Role
    | LinkList
    | Link
    | TwoColumnText
    | RelatedLinks
    | FeaturedElement
    | EventsPreviewList
    | CollectionList
    | CardList
    | HeroBanner
    | PublicationList
    | Publication
    | PersonRichText
    | PersonCategory
    | WorkspaceTag
    | Tag
    | Video
    | PostCategory
    | EventCategory
    | Page
    | Person
    | Event
    | Post
    | OpenGraph
    | Seo
    | RichText
    | SanityImageCrop
    | SanityImageHotspot
    | SanityImageAsset
    | SanityAssetSourceData
    | SanityImageMetadata
    | PageHeader
    | Navigation
    | Organization
    | Code
    | MediaTag
    | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
