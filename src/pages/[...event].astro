---
import Breadcrumbs from '@components/navigation/Breadcrumbs.astro';
import EventVideoList from '@components/events/EventVideoList.astro';
import PageWrapper from '@components/document/PageWrapper.astro';
import RichText from '@components/modules/RichText.astro';
import SanityImage from '@components/SanityImage.astro';
import ShareLinks from '@components/interactive/ShareLinks.tsx';
import SpeakerBio from '@components/people/SpeakerBio.astro';
import SpeakerPreview from '@components/people/SpeakerPreview.astro';
import { formatEventDetails } from '@lib/utils/formatEvent';
import { getCollection } from 'astro:content';
import { isUpcoming } from '@lib/utils/isUpcoming';

export async function getStaticPaths() {
    const events = await getCollection('events');

    return events.map((event) => ({
        params: {
            event: event.data.slug,
        },
        props: { event },
    }));
}

const { event } = Astro.props;

const eventDetails = formatEventDetails(event.data.details);
const eventVideos = await getCollection(
    'videos',
    ({ data }) =>
        data.eventReference.length > 0 &&
        data.eventReference.some((video) => video._id == event.id)
);
const eventSpeakers = await getCollection('speakers', ({ data }) =>
    event.data.speakersRef.some((speaker) => speaker._id == data._id)
);

// check if this is a past event by first testing for an `endDate` as "today" or "upcoming"
// then test `startDate`
let isPast = false;
if (event.data.details.endDate) {
    isPast = !isUpcoming(event.data.details.endDate);
} else {
    isPast = !isUpcoming(event.data.details.startDate);
}

let tagList: string[] | undefined = undefined;
if (event.data.tags.length > 0) {
    tagList = event.data.tags.map((tag) => `tag-${tag.title.toLowerCase()}`);
}
---

<PageWrapper
    filterType="event"
    footerMargin={true}
    id={event.id}
    template="eventsShow"
    title={event.data.previewTitle ?? event.data.title}
>
    <Breadcrumbs collection="events" style="lighter" />
    <div class="content-wrapper">
        <article class:list={['event | with-sidebar', tagList]}>
            <div class="main-panel">
                <header>
                    <div>
                        {
                            event.data.categories.length > 0 && (
                                <a
                                    class="tag"
                                    href={`/events/categories${event.data.categories[0].slug}`}
                                >
                                    {event.data.categories[0].title}
                                </a>
                            )
                        }
                        <h1>{event.data.title}</h1>
                    </div>
                    <div class="details">
                        <time datetime={event.data.details.startDate}>
                            <strong>{eventDetails.date}</strong>
                        </time>
                        {eventDetails.time && <span>{eventDetails.time}</span>}
                        {
                            eventDetails.location && (
                                <span>{eventDetails.location}</span>
                            )
                        }
                    </div>
                </header>
                {
                    event.data.image && (
                        <div class="image-wrapper">
                            <SanityImage
                                alt={event.data.image.alt}
                                loading="eager"
                                source={event.data.image}
                                width={1200}
                            />
                        </div>
                    )
                }
                <div class="text-wrapper">
                    {
                        event.data.richText && (
                            <RichText
                                module={event.data.richText}
                                withPadding={false}
                            />
                        )
                    }
                    {
                        eventVideos.length > 0 && (
                            <EventVideoList videos={eventVideos} />
                        )
                    }
                    {
                        eventSpeakers.length > 0 && (
                            <section class="section-wrapper">
                                <SpeakerBio speakers={eventSpeakers} />
                            </section>
                        )
                    }
                </div>
                {
                    event.data.tags.length > 0 && (
                        <div class="tags-wrapper">
                            <div class="small-title">Tags</div>
                            <div class="cluster">
                                {event.data.tags.map((tag) => (
                                    <p>{tag.title}</p>
                                ))}
                            </div>
                        </div>
                    )
                }
            </div>
            <div class="sidebar-panel">
                <div class="sidebar-elements">
                    {
                        isPast && (
                            <div class="event-date-notice | with-icon">
                                <svg
                                    aria-hidden="true"
                                    class="ucla-icon__information"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    width="24"
                                    xmlns="http://www.w3.org/2000/svg"
                                >
                                    <path d="M11 17L13 17L13 11L11 11L11 17ZM12 9C12.2833 9 12.521 8.904 12.713 8.712C12.9043 8.52067 13 8.28334 13 8C13 7.71667 12.9043 7.479 12.713 7.287C12.521 7.09567 12.2833 7 12 7C11.7167 7 11.4793 7.09567 11.288 7.287C11.096 7.479 11 7.71667 11 8C11 8.28333 11.096 8.52067 11.288 8.712C11.4793 8.904 11.7167 9 12 9ZM12 22C10.6167 22 9.31666 21.7373 8.1 21.212C6.88333 20.6873 5.825 19.975 4.925 19.075C4.025 18.175 3.31266 17.1167 2.788 15.9C2.26266 14.6833 2 13.3833 2 12C2 10.6167 2.26267 9.31667 2.788 8.1C3.31267 6.88333 4.025 5.825 4.925 4.925C5.825 4.025 6.88333 3.31233 8.1 2.787C9.31667 2.26233 10.6167 2 12 2C13.3833 2 14.6833 2.26234 15.9 2.787C17.1167 3.31234 18.175 4.025 19.075 4.925C19.975 5.825 20.6873 6.88334 21.212 8.1C21.7373 9.31667 22 10.6167 22 12C22 13.3833 21.7373 14.6833 21.212 15.9C20.6873 17.1167 19.975 18.175 19.075 19.075C18.175 19.975 17.1167 20.6873 15.9 21.212C14.6833 21.7373 13.3833 22 12 22Z" />
                                </svg>
                                <p>This event has ended.</p>
                            </div>
                        )
                    }
                    {
                        event.data.details.rsvpLink &&
                            isUpcoming(event.data.details.startDate) && (
                                <a
                                    class="button-link rsvp"
                                    data-size="large"
                                    data-style="success"
                                    href={event.data.details.rsvpLink}
                                    target="_blank"
                                >
                                    RSVP for Event
                                </a>
                            )
                    }
                    {
                        eventSpeakers.length > 0 && (
                            <SpeakerPreview speakers={eventSpeakers} />
                        )
                    }
                    <div>
                        <ShareLinks client:load title={event.data.title} />
                    </div>
                </div>
            </div>
        </article>
    </div>
</PageWrapper>

<style>
    .event {
        margin-block-start: var(--space-2xl);
    }

    .with-sidebar {
        --main-min-width: 57%;
        --sidebar-gap: 5rem;
        --sidebar-min-width: 20rem;
    }

    h1 {
        margin-block-start: var(--space-s);
    }

    .details {
        font-size: var(--step-1);
        margin-block-start: var(--space-m);
    }

    :is(.image-wrapper, .text-wrapper) {
        margin-block-start: var(--space-xl);
    }

    :global(.event .sidebar-panel .small-title) {
        font-size: var(--step--1);
        color: var(--ucla-primary-blue);
        margin-block-end: var(--space-2xs);
        padding-block-end: var(--space-3xs);
        border-block-end: 1px solid var(--site-border);
    }

    .sidebar-elements {
        position: sticky;
        top: var(--space-m);
    }

    :global(.event .sidebar-elements > * + *) {
        margin-block-start: var(--space-xl);
    }

    .button-link.rsvp {
        text-align: center;
        justify-content: center;
        width: 100%;
        padding-block: 1rem;
        padding-inline: 1.5rem;
    }

    .section-wrapper {
        margin-block-start: var(--space-2xl);
    }

    .tags-wrapper {
        margin-block-start: var(--space-l);
        padding-block-start: var(--space-m);
        border-block-start: 1px solid var(--site-border);

        & .small-title {
            font-size: var(--step--1);
        }
    }

    .event-date-notice {
        --icon-size: 18px;
        display: flex;
        gap: 0.5rem;
        align-items: center;
        width: fit-content;
        padding: 0.25rem 0.75rem 0.25rem 0.5rem;
        /* color: var(--ucla-warning); */
        background-color: color-mix(
            in srgb,
            var(--ucla-warning),
            transparent 85%
        );

        & svg {
            fill: var(--ucla-warning);
        }
    }

    @media screen and (max-width: 999px) {
        .with-sidebar {
            --main-min-width: 65%;
            --sidebar-gap: 2rem;
        }
    }
</style>
