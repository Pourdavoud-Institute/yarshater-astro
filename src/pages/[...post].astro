---
import Breadcrumbs from '@components/navigation/Breadcrumbs.astro';
import PageWrapper from '@components/document/PageWrapper.astro';
import RichText from '@components/modules/RichText.astro';
import RichTextBlocks from '@components/richText/RichTextBlocks.astro';
import SanityImage from '@components/SanityImage.astro';
import ShareLinks from '@components/interactive/ShareLinks';
import { format } from '@formkit/tempo';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    const posts = await getCollection('posts');

    return posts.map((post) => ({
        params: {
            post: post.data.slug,
        },
        props: { post },
    }));
}

const { post } = Astro.props;
---

<PageWrapper
    filterType="post"
    footerMargin={true}
    id={post.id}
    template="postsShow"
    title={post.data.title}
>
    <Breadcrumbs collection="posts" />
    <div class="content-wrapper">
        <div class="post | with-sidebar">
            <div class="main-panel">
                <header>
                    <div>
                        {
                            post.data.categories.length > 0 && (
                                <a
                                    class="tag"
                                    href={`/news/categories${post.data.categories[0].slug}`}
                                >
                                    {post.data.categories[0].title}
                                </a>
                            )
                        }
                        <h1>{post.data.title}</h1>
                    </div>
                    {
                        post.data.lede && post.data.lede.length > 0 && (
                            <div class="lede">
                                <RichTextBlocks blocks={post.data.lede} />
                            </div>
                        )
                    }
                </header>
                {
                    post.data.image && (
                        <div class="image-wrapper">
                            <SanityImage
                                alt={post.data.image.alt}
                                aspectRatio={[16, 9]}
                                loading="eager"
                                source={post.data.image}
                                width={1200}
                            />
                        </div>
                    )
                }
                <div class="text-wrapper">
                    {
                        post.data.richText && (
                            <RichText
                                module={post.data.richText}
                                withPadding={false}
                            />
                        )
                    }
                </div>
                {
                    post.data.tags.length > 0 && (
                        <div class="tags-wrapper">
                            <div class="small-title">Tags</div>
                            <div class="cluster">
                                {post.data.tags.map((tag) => (
                                    <p>{tag.title}</p>
                                ))}
                            </div>
                        </div>
                    )
                }
                <!-- <div class="tags-wrapper">Last Updated:</div> -->
            </div>
            <div class="sidebar-panel">
                <div class="publish-date | flow">
                    <div class="small-title">Published on</div>
                    <time datetime={post.data.displayDate}
                        >{format(post.data.displayDate, 'MMM D, YYYY')}</time
                    >
                </div>
                <div>
                    <ShareLinks client:load title={post.data.title} />
                </div>
            </div>
        </div>
    </div>
</PageWrapper>

<style>
    .post {
        margin-block-start: var(--space-2xl);
    }

    .with-sidebar {
        --main-min-width: 57%;
        --sidebar-gap: 5rem;
        --sidebar-min-width: 20rem;
    }

    h1 {
        /* font-size: var(--step-4); */
        margin-block-start: var(--space-s);
    }

    .lede {
        font-size: var(--step-2);
        line-height: 1.5;
        margin-block-start: var(--space-m);
    }

    :is(.image-wrapper, .text-wrapper) {
        margin-block-start: var(--space-xl);
    }

    :global(.post .sidebar-panel > * + *) {
        margin-block-start: var(--space-xl);
    }

    :global(.post .sidebar-panel .small-title) {
        font-size: var(--step--1);
        color: var(--ucla-primary-blue);
        margin-block-end: var(--space-2xs);
        padding-block-end: var(--space-3xs);
        border-block-end: 1px solid var(--site-border);
    }

    .publish-date {
        & time {
            display: inline-block;
            margin-block-start: 0.25rem;
        }
    }

    .tags-wrapper {
        margin-block-start: var(--space-l);
        padding-block-start: var(--space-m);
        border-block-start: 1px solid var(--site-border);
    }

    @media screen and (max-width: 999px) {
        .with-sidebar {
            --main-min-width: 65%;
            --sidebar-gap: 2rem;
        }

        .sidebar-panel {
            margin-block-start: var(--space-m);
        }
    }
</style>
